{"ast":null,"code":"var _jsxFileName = \"/root/Bureau/react-parser/src/components/Main.js\";\nimport { CircularProgress } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { convert } from \"./Parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        var data = convert(text); // console.log(data);\n\n        this.setState({\n          data: data,\n          filed: true\n        });\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Convertisseur Kml to JS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => this.showFile(e),\n          accept: \".xml,.kml\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Valider\",\n          onClick: () => {\n            this.setState({\n              loader: true\n            }, () => {\n              this.range();\n            });\n          },\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.finale.map((_el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: this.convertDate(_el.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 45\n                  }, this), this.state.keys.map((el, id) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: el\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.finale[index].values.map((el, i) => {\n                  // var date = new Date(el.date);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: el.date.split('T')[1].slice(0, 2) + \"h\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 57\n                    }, this), Object.values(el.values).map((__el, __id) => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: __el\n                    }, __id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 65\n                    }, this))]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      filed: false,\n      data: [],\n      days: [],\n      finale: [],\n      keys: [],\n      loading: false\n    };\n  }\n\n  async range() {\n    var days = [];\n    var final = [];\n    this.state.data.forEach(element => {\n      // console.log(element.date.split('T')[0]);\n      var existed = days.indexOf(element.date.split('T')[0]);\n\n      if (existed === -1) {\n        var dayTMP = element.date.split('T')[0];\n        days.push(dayTMP);\n      }\n    });\n    this.setState({\n      days: days\n    }, () => {\n      days.forEach(element => {\n        var filteredHour = this.state.data.filter(el => el.date.split('T')[0] === element);\n        var tmp = {};\n        tmp['date'] = element;\n        tmp[\"values\"] = filteredHour;\n        final.push(tmp);\n      }); // console.log(final[0].values[0].values);\n\n      this.setState({\n        finale: final,\n        keys: Object.keys(final[0].values[0].values),\n        loading: false\n      }, () => {});\n    });\n  }\n\n  convertDate(date) {\n    var tmp = new Date(date);\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    var final = tmp.toLocaleDateString('fr-FR', options);\n    return final.charAt(0).toUpperCase() + final.slice(1); // console.log(tmp);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/root/Bureau/react-parser/src/components/Main.js"],"names":["CircularProgress","React","Component","convert","Main","constructor","props","showFile","e","preventDefault","reader","FileReader","onload","text","target","result","data","setState","filed","readAsText","files","render","loader","range","state","loading","finale","map","_el","index","convertDate","date","keys","el","id","values","i","split","slice","Object","__el","__id","days","final","forEach","element","existed","indexOf","dayTMP","push","filteredHour","filter","tmp","Date","options","weekday","year","month","day","toLocaleDateString","charAt","toUpperCase"],"mappings":"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","sourcesContent":["import { CircularProgress } from '@material-ui/core';\nimport React, { Component } from 'react';\n\n\nimport { convert } from \"./Parser\";\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filed: false,\n            data: [],\n            days: [],\n            finale: [],\n            keys: [],\n            loading: false\n        }\n    }\n\n    showFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const text = (e.target.result)\n            var data = convert(text)\n            // console.log(data);\n            this.setState({ data: data, filed: true })\n\n        };\n        reader.readAsText(e.target.files[0])\n    }\n    async range() {\n        var days = []\n        var final = []\n        this.state.data.forEach(element => {\n            // console.log(element.date.split('T')[0]);\n            var existed = days.indexOf(element.date.split('T')[0])\n\n            if (existed === -1) {\n                var dayTMP = element.date.split('T')[0]\n                days.push(dayTMP)\n            }\n        });\n        this.setState({\n            days: days\n        }, () => {\n            days.forEach((element) => {\n                var filteredHour = this.state.data.filter((el) => el.date.split('T')[0] === element)\n                var tmp = {}\n                tmp['date'] = element;\n                tmp[\"values\"] = filteredHour\n\n                final.push(tmp);\n            });\n            // console.log(final[0].values[0].values);\n\n            this.setState({ finale: final, keys: Object.keys(final[0].values[0].values), loading: false }, () => { })\n        })\n    }\n\n\n    convertDate(date) {\n        var tmp = new Date(date)\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        var final = tmp.toLocaleDateString('fr-FR', options)\n        return (final.charAt(0).toUpperCase() + final.slice(1));\n        // console.log(tmp);\n    }\n    render = () => {\n\n        return (\n            <div>\n                <h2>Convertisseur Kml to JS</h2>\n\n                <input type=\"file\" onChange={(e) => this.showFile(e)} accept='.xml,.kml' />\n                {/* <DataTable\n                    title=\"Arnold Movies\"\n                    columns={columns}\n                    data={this.state.data}\n                /> */}\n                <button title='Valider' onClick={() => { this.setState({ loader: true }, () => {this.range() }) }} >Valider</button>\n\n                <div>\n                    {\n                        this.state.loading && <CircularProgress color=\"secondary\" />\n                    }\n                </div>\n\n                <div>\n                    {\n                        this.state.finale.map((_el, index) => (\n                            <div key={index} >\n\n                                {/* <h3>{_el.date}</h3> */}\n                                <h3>{this.convertDate(_el.date)}</h3>\n\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th></th>\n                                            {\n                                                this.state.keys.map((el, id) => (\n                                                    <th key={id} >{el}</th>\n                                                ))\n                                            }\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {/* {\n                                            this.state.finale.map((el) => (\n                                                <tr>\n                                                    <td>{el}</td>\n                                                </tr>\n                                            ))\n                                        } */}\n\n                                        {\n                                            this.state.finale[index].values.map((el, i) => {\n                                                // var date = new Date(el.date);\n                                                return (\n                                                    <tr key={i} >\n                                                        <td>{el.date.split('T')[1].slice(0, 2) + \"h\"}</td>\n                                                        {\n                                                            Object.values(el.values).map((__el, __id) => (\n                                                                <td key={__id} >{__el}</td>\n                                                            ))\n                                                        }\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}